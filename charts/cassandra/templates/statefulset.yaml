apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cassandra.fullname" . }}
  labels:
    {{- include "cassandra.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "cassandra.fullname" . }}-headless
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cassandra.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cassandra.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cassandra.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            {{- if .Values.command }}
            {{- toYaml .Values.command | nindent 12 }}
            {{- else }}
            - bash
            - -ec
            - |
              # Node 0 is the password seeder
              if [[ $POD_NAME =~ (.*)-0$ ]]; then
                  echo "Setting node as password seeder"
                  export CASSANDRA_PASSWORD_SEEDER=yes
              else
                  # Only node 0 will execute the startup initdb scripts
                  export CASSANDRA_IGNORE_INITDB_SCRIPTS=1
              fi
              /opt/bitnami/scripts/cassandra/entrypoint.sh /opt/bitnami/scripts/cassandra/run.sh
            {{- end }}
        {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: intra
              containerPort: {{ .Values.containerPorts.intra | default "7000" }}
            - name: tls
              containerPort: {{ .Values.containerPorts.tls | default "7001" }}
            - name: jmx
              containerPort: {{ .Values.containerPorts.jmx | default "7199" }}
            - name: cql
              containerPort: {{ .Values.containerPorts.cql | default "9042" }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.image.debug | quote }}
            - name: CASSANDRA_CLUSTER_NAME
              value: {{ .Values.cluster.name }}
            - name: CASSANDRA_SEEDS
              value: {{ (include "cassandra.seeds" .) | quote }}
            - name: CASSANDRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "cassandra.fullname" . }}
                  key: "cassandra-password"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CASSANDRA_USER
              value: {{ .Values.dbUser.user | quote }}
            - name: CASSANDRA_NUM_TOKENS
              value: {{ .Values.cluster.numTokens | quote }}
            - name: CASSANDRA_DATACENTER
              value: {{ .Values.cluster.datacenter }}
            - name: CASSANDRA_ENDPOINT_SNITCH
              value: {{ .Values.cluster.endpointSnitch }}
            - name: CASSANDRA_RACK
              value: {{ .Values.cluster.rack }}
            {{- if .Values.jvm.maxHeapSize }}
            - name: MAX_HEAP_SIZE
              value: {{ .Values.jvm.maxHeapSize | quote }}
            {{- end }}
            {{- if .Values.jvm.newHeapSize }}
            - name: HEAP_NEWSIZE
              value: {{ .Values.jvm.newHeapSize | quote }}
            {{- end }}
            {{- if .Values.jvm.extraOpts }}
            - name: JVM_EXTRA_OPTS
              value: {{ .Values.jvm.extraOpts | quote }}
            {{- end }}
            {{- if .Values.cluster.enableUDF }}
            - name: CASSANDRA_ENABLE_USER_DEFINED_FUNCTIONS
              value: {{ .Values.cluster.enableUDF | quote }}
            {{- end }}
            {{- if .Values.containerPorts.intra  }}
            - name: CASSANDRA_TRANSPORT_PORT_NUMBER
              value: {{ .Values.containerPorts.intra | quote }}
            {{- end }}
            {{- if .Values.containerPorts.jmx }}
            - name: CASSANDRA_JMX_PORT_NUMBER
              value: {{ .Values.containerPorts.jmx | quote }}
            {{- end }}
            {{- if .Values.containerPorts.cql }}
            - name: CASSANDRA_CQL_PORT_NUMBER
              value: {{ .Values.containerPorts.cql | quote }}
            {{- end }}
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  nodetool status
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -ec
                - |
                  nodetool status | grep -E "^UN\\s+${POD_IP}"
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if not .Values.persistence.enabled }}
          lifecycle:
            preStop:
              exec:
                command:
                  - bash
                  - -ec
                  - nodetool decommission
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity  | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "cassandra.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "cassandra.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 10 }}
        nodeAffinity: {{- include "cassandra.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
  {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: {{- include "cassandra.matchLabels" . | nindent 10 }}
        {{- if .Values.persistence.annotations }}
        annotations: {{- toYaml .Values.persistence.annotations | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        storageClassName: {{ .Values.persistence.storageClass }}
  {{- end }}
